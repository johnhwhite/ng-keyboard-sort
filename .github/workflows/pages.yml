name: Pages
on:
  push:
    branches: ['main']
  pull_request:
    types: [opened, synchronize]
env:
  node_version: 22
concurrency:
  group: pages
  cancel-in-progress: true
jobs:
  pages:
    permissions:
      contents: read
      id-token: write
      pages: write
      pull-requests: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: repo
          fetch-depth: 0
          ref: main
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
      - name: Build
        shell: bash
        run: |
          mkdir _site
          cd repo
          BRANCHES="$(git branch -r --format='%(refname:lstrip=3)' | fgrep -v HEAD)"
          echo "Building:"
          echo "${BRANCHES}" | sed 's/^/ üü¢ /g'
          echo ''
          set -x
          for b in ${BRANCHES}; do
            bPath=$(echo ${b} | sed 's|/|-|g')
            echo " ‚è≥ ${b}"
            git clean -dfX
            git switch ${b}
            npm ci
            if [ "${b}" == "main" ]; then
              npx ng build e2e --base-href="/$(basename $GITHUB_REPOSITORY)/"
              mv dist/apps/e2e/browser/* ../_site/
            else
              npx ng build e2e --base-href="/$(basename $GITHUB_REPOSITORY)/${bPath}/"
              mv dist/apps/e2e/browser ../_site/${bPath}
            fi
            echo " ‚úÖ ${b}"
          done
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const sbImage = `https://developer.stackblitz.com/img/open_in_stackblitz.svg`;
            const sbPath = `${{ github.repository }}/tree/${{ github.head_ref }}`;
            const bPath = '${{ github.head_ref }}'.replace(/\//g, '-').toLowerCase();
            const newComment = `
            <!-- ${{ github.workflow }} -->
            [![Open in StackBlitz](${sbImage})](https://stackblitz.com/fork/github/${sbPath})

            [‚ñ∂Ô∏è Run example](https://${context.repo.owner}.github.io/${context.repo.repo}/${bPath}/)
            `;
            github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            }).then(comments => {
              const comment = comments.data.find(comment => (
                comment.user.login === 'github-actions[bot]'
                && comment.body.includes(`<!-- ${{ github.workflow }} -->`)
              ))
              if (comment) {
                if (comment.body === newComment) {
                  return
                }
                github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id,
                  body: newComment
                })
              } else {
                github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: newComment
                })
              }
            })
