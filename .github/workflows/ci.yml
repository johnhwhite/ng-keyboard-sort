name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  node_version: 22
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Yaml Lint
        run: |
          yamllint --strict -f github \
            -d '{extends: default, rules: {document-start: disable, line-length: {max: 120}, truthy: disable}}' \
            $(git ls-files '*.yaml' '*.yml')
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - name: Install
        run: npm ci
      - name: Validate commit message
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const commits = await github.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/commits', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            }).then((commits) => commits.map(({sha}) => sha));
            const commitMessages = await Promise.all(commits.map((sha) =>
              exec.getExecOutput('git',['log', '-n', '1', '--format=%s', sha])
            );
            if (!commitMessages.includes(context.payload.pull_request.title)) {
              core.setFailed('❌ PR title must match a commit message');
              process.exit(1);
            }
            await exec.exec('sh', [
              '-c',
              `jq -r .pull_request.title ${process.env.GITHUB_EVENT_PATH} | npx commitlint --strict`
            ])
              .then(() => {
                core.info('✅ Commit message validation passed');
              })
              .catch(() => {
                core.setFailed('❌ Commit message validation failed');
                process.exit(1);
              });
      - name: Prep
        run: npx playwright install --with-deps webkit
      - name: Lint
        run: npm run lint:all
      - name: Build
        run: npm run build
      - name: Test
        run: node ./scripts/test.js
      - name: End to End Tests
        run: npm run e2e
