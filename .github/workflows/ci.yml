name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  node_version: 18
  CI: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Yaml Lint
        run: |
          yamllint --strict -f github \
            -d '{extends: default, rules: {document-start: disable, line-length: {max: 120}, truthy: disable}}' \
            $(git ls-files '*.yaml' '*.yml')
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.node_version }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install
        run: |
          npm ci
          npx playwright install --with-deps webkit
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Validate commit message
        if: github.event_name == 'pull_request'
        run: |
          PR_COMMIT=$(gh pr view --json commits --jq '.commits[0].messageHeadline' ${{ github.event.pull_request.number }})
          PR_TITLE=$(gh pr view --json title --jq '.title' ${{ github.event.pull_request.number }})
          if [[ $PR_COMMIT != $PR_TITLE ]]; then
            echo "PR title and commit message must match"
            exit 1
          fi
          echo $PR_COMMIT | npx commitlint --strict
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Prep
        run: npx playwright install --with-deps webkit
      - name: Lint
        run: npm run lint:all
      - name: Build
        run: npm run build
      - name: Test
        run: node ./scripts/test.js
      - name: End to End Tests
        run: npm run e2e
