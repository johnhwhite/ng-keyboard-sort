name: Publish

on:
  workflow_dispatch:

env:
  node_version: 18
jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
      - name: Get node cache
        id: get-node-cache
        run: |
          ./scripts/node-cache.sh >> $GITHUB_OUTPUT
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.node_version }}-${{ steps.get-node-cache.outputs.node-cache }}
          restore-keys: '${{ runner.os }}-node-${{ env.node_version }}-'
      - name: Install
        run: npm i
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Build
        run: npm run build:package
      - name: Publish to NPM
        run: |
          VERSION="$(jq -r '.version' package.json)"
          MAJOR_VERSION="$(echo $VERSION | cut -d. -f1)"
          cd dist/ng-keyboard-sort
          npm config set '//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}'
          set -x
          npm pkg set "version=${VERSION}"
          npm publish --access public --tag "v${MAJOR_VERSION}-lts"
          npm dist-tag add "$(jq -r .name package.json)@${VERSION}" latest
          npm config delete '//registry.npmjs.org/:_authToken'
