name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  packages: write

env:
  node_version: 24
jobs:
  release-please:
    name: Release Please
    environment: npm
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: 'simple'
          target-branch: '${{ github.ref_name }}'
          token: '${{ secrets.GH_TOKEN }}'
      - name: Checkout
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Setup node
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.node_version }}
      - name: Install
        run: npm ci
      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        id: build
        run: |
          npm run build:package
          echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT
      - name: Publish to NPM
        if: ${{ steps.release.outputs.release_created }}
        env:
          VERSION: ${{ steps.build.outputs.version }}
          MAJOR_VERSION: ${{ steps.release.outputs.major }}
        run: |
          cd dist/ng-keyboard-sort
          ~/npm-latest/bin/npm config set '//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}'
          set -x
          ~/npm-latest/bin/npm pkg set "version=${VERSION}"
          ~/npm-latest/bin/npm publish --provenance --access public --tag "v${MAJOR_VERSION}-lts"
          if [ "${{ github.ref_name }}" = "main" ]; then
            ~/npm-latest/bin/npm dist-tag add "$(jq -r .name package.json)@${VERSION}" latest
          fi
