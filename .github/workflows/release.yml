name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: 
    read: true
    write: true
  packages: write

env:
  node_version: 20
jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: 'simple'
          target-branch: '${{ github.ref_name }}'
          token: '${{ secrets.GH_TOKEN }}'
      - name: Checkout
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Setup node
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
      - name: Get node cache
        if: ${{ steps.release.outputs.release_created }}
        id: get-node-cache
        run: |
          ./scripts/node-cache.sh >> $GITHUB_OUTPUT
      - name: Cache node_modules
        if: ${{ steps.release.outputs.release_created }}
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.node_version }}-${{ steps.get-node-cache.outputs.node-cache }}
          restore-keys: '${{ runner.os }}-node-${{ env.node_version }}-'
      - name: Install
        if: ${{ steps.release.outputs.release_created && steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: npm i
      - name: Build
        if: ${{ steps.release.outputs.release_created }}
        id: build
        run: |
          npm run build:package
          echo "::set-output name=version::$(cat version.txt)"
      - name: Publish to NPM
        if: ${{ steps.release.outputs.release_created }}
        env:
          VERSION: ${{ steps.build.outputs.version }}
          MAJOR_VERSION: ${{ steps.release.outputs.major }}
        run: |
          cd dist/ng-keyboard-sort
          npm config set '//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}'
          set -x
          npm pkg set "version=${VERSION}"
          npm publish --access public --tag "v${MAJOR_VERSION}-lts"
          if [ "${{ github.ref_name }}" = "main" ]; then
            npm dist-tag add "$(jq -r .name package.json)@${VERSION}" latest
          fi
